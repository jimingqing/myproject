package com.yrtech.wx.capp.framework.core.json;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import com.yrtech.wx.capp.framework.core.log.Msg;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 * JSON对象处理类
 * 
 * @Package: com.market.portal.commons
 * @ClassName: JSONUtil
 * @author wanghui
 * @date 2012-5-28 上午10:07:40
 * @version: V1.0
 */
public class JSONUtil {

	/**
	 * 将String转换成JSON
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:53:15
	 * @version 1.0
	 * @param key
	 * @param value
	 * @return
	 */
	public static String string2json(String key, String value) {
		JSONObject object = new JSONObject();
		object.put(key, value);
		return object.toString();
	}
	
	/**
	 * 将数组转换成JSON
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:54:17
	 * @version 1.0
	 * @param object
	 * @return
	 */
	public static String array2json(Object object) {
		JSONArray jsonArray = JSONArray.fromObject(object);
		return jsonArray.toString();
	}

	/**
	 * 将Map转换成JSON
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:54:28
	 * @version 1.0
	 * @param object
	 * @return
	 */
	public static String map2json(Object object) {
		JSONObject jsonObject = JSONObject.fromObject(object);
		return jsonObject.toString();
	}

	/**
	 * 将Collection转换成JSON
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:54:39
	 * @version 1.0
	 * @param object
	 * @return
	 */
	public static String collection2json(Object object) {
		JSONArray jsonArray = JSONArray.fromObject(object);
		return jsonArray.toString();
	}
	
	/**
	 * 将POJO转换成JSON
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:54:48
	 * @version 1.0
	 * @param object
	 * @return
	 */
	public static String bean2json(Object object) {
		JSONObject jsonObject = JSONObject.fromObject(object);
		return jsonObject.toString();
	}

	/**
	 * 将JSON转换成Collection,其中collectionClz为Collection具体子类的Class,valueClz为Collection中存放的对象的Class
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:54:57
	 * @version 1.0
	 * @param json
	 * @param collectionClz
	 * @param valueClz
	 * @return
	 */
	public static Collection json2Collection(String json, Class collectionClz,
			Class valueClz) {
		JSONArray jsonArray = JSONArray.fromObject(json);
		return JSONArray.toCollection(jsonArray, valueClz);
	}

	/**
	 * 将JSON转换成数组,其中valueClz为数组中存放的对象的Class
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:55:39
	 * @version 1.0
	 * @param json
	 * @param valueClz
	 * @return
	 */
	public static Object json2Array(String json, Class valueClz) {
		JSONArray jsonArray = JSONArray.fromObject(json);
		return JSONArray.toArray(jsonArray, valueClz);
	}

	/**
	 * 将JSON转换成Map,其中valueClz为Map中value的Class,keyArray为Map的key
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:55:51
	 * @version 1.0
	 * @param keyArray
	 * @param json
	 * @param valueClz
	 * @return
	 */
	public static Map json2Map(Object[] keyArray, String json, Class valueClz) {
		JSONObject jsonObject = JSONObject.fromObject(json);
		Map classMap = new HashMap();

		for (int i = 0; i < keyArray.length; i++) {
			classMap.put(keyArray[i], valueClz);
		}

		return (Map) JSONObject.toBean(jsonObject, Map.class, classMap);
	}

	/**
	 * 将JSON转换成POJO,其中beanClz为POJO的Class
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:56:14
	 * @version 1.0
	 * @param json
	 * @param beanClz
	 * @return
	 */
	public static Object json2Object(String json, Class beanClz) {
		return JSONObject.toBean(JSONObject.fromObject(json), beanClz);
	}

	/**
	 * 将JSON转换成String
	 * @author: wanghui
	 * @date： 2012-8-12 上午09:56:23
	 * @version 1.0
	 * @param json
	 * @param key
	 * @return
	 */
	public static String json2String(String json, String key) {
		JSONObject jsonObject = JSONObject.fromObject(json);
		return jsonObject.get(key).toString();
	}

	public static void main(String[] args) {
		Map<String, String> map = new HashMap<String, String>();
		map.put("retFlag", "false");
		String str = JSONUtil.map2json(map);
		Msg.print(str);
	}

}
